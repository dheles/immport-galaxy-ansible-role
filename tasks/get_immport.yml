---
- name: include os-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: install package dependencies
  package:
    name: "{{ item }}"
    state: present
  become: true
  with_items: "{{ immport_package_dependencies }}"

- name: stat server dir
  stat:
    path: "{{ immport_server_dir }}"
  register: server_dir_stat

- name: stop servers before relaunching
  include: stop_servers.yml
  when: server_dir_stat.stat.exists

- name: get immport galaxy from repo
  git:
    repo: "{{ immport_repo }}"
    dest: "{{ immport_server_dir }}"
    force: true

- name: create our galaxy config file from the sample
  copy:
    remote_src: true
    src: "{{ immport_server_dir }}/config/galaxy.ini.sample"
    dest: "{{ immport_server_dir }}/config/galaxy.ini"

# TODO: there's probably a more direct way to do this.
# the main requirement is the virtualenv for the python packages
- name: run tests to get set up
  command: "./run_tests.sh -unit"
  args:
    chdir: "{{ immport_server_dir }}"

- name: install python packages
  include: python_packages.yml
  tags: ['python']

- name: Compile FLOCK
  include: compile_flock.yml
  tags: ['flock']

- name: open galaxy to the network
  lineinfile:
    dest: "{{ immport_server_dir }}/config/galaxy.ini"
    line: "host = 0.0.0.0"
    insertafter: '^\[server\:main\]'
    state:  present

- name: start servers
  include: start_servers.yml
